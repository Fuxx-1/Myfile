/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'org.springframework.experimental.aot' version '0.12.1'
//    id 'war'
}

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}


dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.7'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'com.alibaba:fastjson:1.2.83'
    implementation 'io.jsonwebtoken:jjwt-api:0.10.7'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'net.iharder:base64:2.3.9'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.10.7'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.10.7'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

group = 'cn.lab'
version = 'v0.0.1.bate.15'
sourceCompatibility = '17'

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task showRepos {
    doLast {
        repositories.each {
            println "repository: ${it.name} ('${it.url}')"
        }
    }
}
